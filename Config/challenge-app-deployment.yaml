---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /media/NFS/k8s/
    server: 192.168.2.100

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi


---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
type: Opaque
data:
  APP_API_KEY: cHJvZHVjdGlvbktleQ== #productionKey

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: challenge-app-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: challenge-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25% 
  template:
    metadata:
      labels:
        app: challenge-app
    spec:
      containers:
      - name: challenge-app
        image: 192.168.2.100:5000/challenge-app:1.5
        imagePullPolicy: IfNotPresent
        env:
        - name: APP_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret   
              key: APP_API_KEY  
        - name: app.upload.dir
          value: "/opt/"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nfs-storage
          mountPath: /opt
      volumes:
      - name: nfs-storage
        persistentVolumeClaim:
          claimName: nfs-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: challenge-app-service
spec:
  selector:
    app: challenge-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: challenge-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: challenge-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: challenge-app-service
            port:
              number: 8080





